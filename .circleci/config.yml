# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
    build_and_test:
        docker:
            - image: circleci/node:11.8.0-stretch-browsers

        working_directory: ~/repo

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "yarn.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: yarn install

            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "yarn.lock" }}

            - run: yarn lint

            - run: yarn test --ci --maxWorkers=2 --coverage --coverageReporters=text-lcov | ./node_modules/coveralls/bin/coveralls.js

    integration_tests:
        docker:
            - image: circleci/node:11.8.0-stretch-browsers

        working_directory: ~/repo

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "yarn.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: yarn install

            - run:
                  name: Install Chrome
                  command: |
                      wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
                      sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
                      sudo apt-get update
                      sudo apt-get -y install google-chrome-stable

            - run:
                  command: yarn start
                  background: true

            - run: sleep 10

            - run: yarn test:integration --headless

            - store_test_results:
                  path: ./junit-results

            - store_artifacts:
                  path: ./errorShots

    publish_canary:
        docker:
            - image: circleci/node:11.8.0-stretch-browsers

        working_directory: ~/repo

        steps:
            - checkout
            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "yarn.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-
            - run: git config --global user.email "admin@90milesbridge.com"
            - run: git config --global user.name "TheAdmin"
            - run: yarn install
            - run:
                  name: Create .npmrc file
                  command: |
                      touch .npmrc;
                      echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
            - run: yarn publish:canary

    deploy_firebase:
        docker:
            - image: circleci/node:11.8.0-stretch-browsers

        working_directory: ~/repo

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "yarn.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run:
                  name: Create .env file
                  command: |
                      touch .env;
                      echo REACT_APP_GA_ID=$REACT_APP_GA_ID >> .env;
                      echo REACT_APP_GOOGLE_MAPS_APIKEY=$REACT_APP_GOOGLE_MAPS_APIKEY >> .env;
                      echo REACT_APP_RECAPTCHA_APIKEY=$REACT_APP_RECAPTCHA_APIKEY >> .env;

            - run: yarn install
            - run: yarn deploy:library --token=$FIREBASE_TOKEN

workflows:
    version: 2
    build_and_test:
        jobs:
            - build_and_test
            - integration_tests:
                  requires:
                      - build_and_test
            - deploy_firebase:
                  requires:
                      - build_and_test
                      - integration_tests
                  filters:
                      branches:
                          only: master
            - publish_canary:
                  requires:
                      - build_and_test
                      - integration_tests
                  filters:
                      branches:
                          only: master
